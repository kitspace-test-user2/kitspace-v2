#!/usr/bin/env python3

"""
    A python script to create various plot files from a board:
    Fab files
    Gerber files

    Adapted from: https://github.com/gregdavill/kicadScripts
"""

import pcbnew
import time
import os.path
import sys


filename = sys.argv[1]
output_directory = os.path.abspath(sys.argv[2])
project_name = os.path.splitext(os.path.split(filename)[1])[0]
project_path = os.path.abspath(os.path.split(filename)[0])

board = pcbnew.LoadBoard(filename)
plot_control = pcbnew.PLOT_CONTROLLER(board)
plot_options = plot_control.GetPlotOptions()
plot_options.SetOutputDirectory(output_directory)
plot_options.SetPlotFrameRef(False)
plot_options.SetLineWidth(pcbnew.FromMM(0.35))
plot_options.SetAutoScale(False)
plot_options.SetScale(1)
plot_options.SetMirror(False)
plot_options.SetUseGerberAttributes(False)
plot_options.SetExcludeEdgeLayer(True)
plot_options.SetScale(1)
plot_options.SetUseAuxOrigin(True)
plot_options.SetNegative(False)
plot_options.SetPlotReference(True)
plot_options.SetPlotValue(True)
plot_options.SetPlotInvisibleText(False)

# remove solder mask from silk to be sure there is no silk on pads
plot_options.SetSubtractMaskFromSilk(True)


plot_plan = [
    ("F_Cu", pcbnew.F_Cu, "Top layer"),
    ("B_Cu", pcbnew.B_Cu, "Bottom layer"),
    ("B_Mask", pcbnew.B_Mask, "Mask Bottom"),
    ("F_Mask", pcbnew.F_Mask, "Mask top"),
    ("B_Paster", pcbnew.B_Paste, "Paste Bottom"),
    ("F_Paste", pcbnew.F_Paste, "Paste Top"),
    ("F_SilkS", pcbnew.F_SilkS, "Silk Top"),
    ("B_SilkS", pcbnew.B_SilkS, "Silk Bottom"),
    ("Edge_Cuts", pcbnew.Edge_Cuts, "Edges"),
]

plot_options.SetMirror(False)
plot_options.SetDrillMarksType(pcbnew.PCB_PLOT_PARAMS.NO_DRILL_SHAPE)

fab_files = []

# Functional Gerber Plots
for layer_info in plot_plan:
    plot_control.SetLayer(layer_info[1])
    plot_control.OpenPlotfile(layer_info[0], pcbnew.PLOT_FORMAT_GERBER, layer_info[2])
    plot_control.PlotLayer()
    time.sleep(0.01)
    plot_control.ClosePlot()


# generate internal copper layers, if any
copper_layer_count = board.GetCopperLayerCount()

for n in range(1, copper_layer_count - 1):
    plot_control.SetLayer(n)
    layer_name = "Inner%s" % n
    plot_control.OpenPlotfile(layer_name, pcbnew.PLOT_FORMAT_GERBER, "Inner")
    plot_control.PlotLayer()
    time.sleep(0.01)
    plot_control.ClosePlot()


# Fabricators need drill files.
# sometimes a drill map file is asked (for verification purpose)
drill_writer = pcbnew.EXCELLON_WRITER(board)
drill_writer.SetMapFileFormat(pcbnew.PLOT_FORMAT_PDF)

mirror = False
minimal_header = False
offset = board.GetAuxOrigin()
merge_npth = True
drill_writer.SetOptions(mirror, minimal_header, offset, merge_npth)

metric_format = True
drill_writer.SetFormat(metric_format)

gen_drl = True
gen_map = False
drill_writer.CreateDrillandMapFilesSet(output_directory, gen_drl, gen_map)

# A text file to report drill statistics
drill_report_filename = output_directory + "/drill_report.txt"
drill_writer.GenDrillReportFile(drill_report_filename)
